// <auto-generated />
using Assignment.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("MinDegree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = "Bachelor",
                            DepartmentId = 1,
                            MinDegree = "Certificate",
                            Name = "Introduction to Programming",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Degree = "Bachelor",
                            DepartmentId = 1,
                            MinDegree = "Bachelor",
                            Name = "Data Structures",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Degree = "Bachelor",
                            DepartmentId = 2,
                            MinDegree = "Certificate",
                            Name = "Calculus I",
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("Assignment.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MgrName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MgrName = "Dr. Smith",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            MgrName = "Dr. Johnson",
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            MgrName = "Dr. Brown",
                            Name = "Physics"
                        });
                });

            modelBuilder.Entity("Assignment.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            DepartmentId = 1,
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            DepartmentId = 1,
                            Name = "Bob Williams"
                        },
                        new
                        {
                            Id = 3,
                            Age = 19,
                            DepartmentId = 2,
                            Name = "Carol Davis"
                        });
                });

            modelBuilder.Entity("Assignment.Models.StudentCourseResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourseResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Grade = "A",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Grade = "B+",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Grade = "A-",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            Grade = "A",
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("Assignment.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            DepartmentId = 1,
                            Name = "John Doe",
                            Salary = 75000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            DepartmentId = 1,
                            Name = "Jane Smith",
                            Salary = 80000m
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd",
                            DepartmentId = 2,
                            Name = "Mike Wilson",
                            Salary = 72000m
                        });
                });

            modelBuilder.Entity("Assignment.Models.Course", b =>
                {
                    b.HasOne("Assignment.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Department");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Assignment.Models.Student", b =>
                {
                    b.HasOne("Assignment.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Assignment.Models.StudentCourseResult", b =>
                {
                    b.HasOne("Assignment.Models.Course", "Course")
                        .WithMany("StudentCourseResults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.Student", "Student")
                        .WithMany("StudentCourseResults")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Assignment.Models.Teacher", b =>
                {
                    b.HasOne("Assignment.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Assignment.Models.Course", b =>
                {
                    b.Navigation("StudentCourseResults");
                });

            modelBuilder.Entity("Assignment.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Assignment.Models.Student", b =>
                {
                    b.Navigation("StudentCourseResults");
                });

            modelBuilder.Entity("Assignment.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
